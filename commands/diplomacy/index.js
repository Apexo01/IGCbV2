const fetch = require('node-fetch');
const slashOptions = require('./slashOptions.json');
const { title } = require('./about.json');

module.exports = {

	active : true,
	category : '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',

	name : 'diplomacy',
	title : title,
	slashOptions : slashOptions,

	gameID : '52972', // ID –∏–≥—Ä—ã –Ω–∞ —Å–∞–π—Ç–µ
	interval : 600, // –ò–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

	/**
	 * –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤. ID –∏–≥—Ä–æ–∫–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ => ID –∏–≥—Ä–æ–∫–æ–≤ –≤ –¥–∏—Å–∫–æ—Ä–¥–µ
	 * @type {Object}
	 */
	players : {
		'19271' : '378478050460827648',
		'19287' : '294713715599736834',
		'19671' : '267312791751229449',
		'19654' : '586191681519484930',
		'19661' : '533245137216864286',
		'19663' : '917452598108377159',
		'19688' : '247374977890779137',
		'19669' : '256112905919922177',
		'19659' : '590444955709997056',
		'19673' : '312282430880874503',
		'19290' : '391550905234882561',
		'19666' : '476805321046884352',
		'19658' : '667377111589191681',
		'19668' : '381489366406791169',
		'19291' : '443686702414954496',
		'19670' : '417025997570048002',
		'19667' : '475011645912121364',
		'19697' : '262987240488042496',
		'19672' : '385450870638247958',
		'19655' : '256114365894230018',
		'20222' : '500020124515041283',
		'20227' : '830829700237885530',
		'20221' : '703752912651681843',
		'20225' : '318998098225528832',
		'19313' : '368442268274655235'
	},

	/**
	 * –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–æ–≤ —Å—Ç—Ä–∞–Ω
	 * @type {Object}
	 */
	flags : {
		'France' : 'üá´üá∑',
		'Italy' : 'üáÆüáπ',
		'Turkey' : 'üáπüá∑',
		'Lithuania' : 'üá±üáπ',
		'Germany' : 'üá©üá™',
		'United Kingdom' : 'üá¨üáß',
		'Spain' : 'üá™üá∏',
		'Greece' : 'üá¨üá∑',
		'Ukraine' : 'üá∫üá¶',
		'Netherlands' : 'üá≥üá±',
		'Poland' : 'üáµüá±',
		'Sweden' : 'üá∏üá™',
		'Finland' : 'üá´üáÆ',
		'Romania' : 'üá∑üá¥',
		'Serbia' : 'üá∑üá∏',
		'Georgia' : 'üá¨üá™',
		'Czechia' : 'üá®üáø',
		'Ireland' : 'üáÆüá™',
		'Portugal' : 'üáµüáπ',
		'Russia' : 'üá∑üá∫',
		'Britain' : 'üá¨üáß',
		'Holland' : 'üá≥üá±',
		'China' : 'üá®üá≥',
		'USA' : 'üá∫üá∏',
		'Brazil' : 'üáßüá∑',
		'Japan' : 'üáØüáµ',
		'Austria' : 'üá¶üá∫',
		'Mexico' : 'üá≤üáΩ',
	},

	/**
	 * –°–ø–∏—Å–æ–∫ —ç–º–æ–¥–∑–∏ –ø–æ–¥ —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞
	 * @type {Object}
	 */
	statuses : {
		'Ready' : 'success',
		'Completed' : 'warning',
		'Not received' : 'error',
		'Skip' : 'black_circle'
	},

	/**
	 * –°–ø–∏—Å–æ–∫ —Å–µ–∑–æ–Ω–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
	 * @type {Object}
	 */
	seasons : {
		'Spring' : '–í–µ—Å–Ω–∞',
		'Summer' : '–õ–µ—Ç–æ',
		'Autumn' : '–û—Å–µ–Ω—å',
		'Winter' : '–ó–∏–º–∞',
	},

	/**
	 * –°–ø–∏—Å–æ–∫ —Ñ–∞–∑ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
	 * @type {Object}
	 */
	phases : {
		'Diplomacy' : '–î–∏–ø–ª–æ–º–∞—Ç–∏—è',
		'Retreats' : '–û—Ç—Å—Ç—É–ø–ª–µ–Ω–∏—è',
		'Builds' : '–†–µ–∫—Ä—É—Ç–∏–Ω–≥'
	},


	init : async function(path){

		const response = await fetch('https://www.vdiplomacy.com/board.php?gameID=' + this.gameID);

		if(!response){
			log.initText += log.error(path + ': –°–∞–π—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
			this.active = false;
			return this;
		}

		const body = await response.text();

		if(body.includes('Game not found')){
			log.initText += log.error(path + ': –ò–≥—Ä–∞ ID:' + this.gameID + ' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
			this.active = false;
			return this;
		}

		this.channel = guild.channels.cache.get('898257036926660698');

		this.timerId = setInterval(async () => {
			try{
				const result = await this.update(false, true);
				if(result.status) await this.channel.send(result.data);
			}catch(e){
				log.initText += log.error('./commands/' + this.name + '.js: ' + e.message);
				clearInterval(this.timerId);
			}
		}, this.interval * 1000);

		const pattern = /<tr class="member memberAlternate\d"><td class="memberLeftSide">\s+<span class="memberCountryName"> <span class="member\d+StatusIcon">(-|<img src=".+" alt=".+" title=".+" \/>) <\/span><span class="country\d+ {2}memberStatusPlaying">(.+)<\/span><\/span>\s+<\/td>\s+<td class="memberRightSide ">\s+<div>\s+<div class="memberUserDetail">\s+<span class="memberName"><a href=profile\.php\?userID=(\d+)">.+<\/a>\s+<span class="points">\(1000 <img src="images\/icons\/vpoints\.png" alt="D" title="vDiplomacy points" \/><\/b>\)<\/span><\/span> {2}- Delays left: <span class="excusedNMRs">(\d+)<\/span> of <span class="excusedNMRs">(\d+)<\/span>(| - <span class="missedPhases">Missed last deadline<\/span>)?<\/span>\s+<\/div>\s+<div class="memberGameDetail">\s+<span class="memberPointsCount">.+<\/span><br \/><span class="memberUnitCount"><span class="memberSCCount"><em>(\d+)<\/em> supply-centers, <em class=".+">(\d+)<\/em> units<\/span><\/span>/;

		this.globalRegExp = new RegExp(pattern, 'g');
		this.localRegExp = new RegExp(pattern);

		return this;

	},

	/**
	 * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—ã
	 * @param {CommandInteraction} int –ö–æ–º–∞–Ω–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	 */
	slash : async function(int){
		const flag = int.options.getString('flag');
		await int.deferReply({ephemeral : (flag === 'ephemeral') });
		try{
			const result = await this.update(true, flag === 'ping');
			result.data.ephemeral = flag === 'ephemeral';
			const pings = result.data.content;
			result.data.content = undefined;
			result.status
				? await int.editReply(result.data)
				: await int.editReply({ content : reaction.emoji.error + ' ' + result.data, ephemeral : true });

			if(pings)
				await int.followUp({ content: pings });

			if(result.suppressed)
				await int.followUp({
					content: reaction.emoji.error + ' ' + localize(int.locale, 'Mentions were suppressed due to the fact that too little time has passed since past mentions'),
					ephemeral: true
				})

		}catch(e){
			await int.editReply({ content : reaction.emoji.error + ' [500] –û—à–∏–±–∫–∞!', ephemeral : true });
			log.error('./commands/' + this.name + '.js: ' + e.message);
			clearInterval(this.timerId);
		}
	},


	/**
	 * –ó–∞–ø—Ä–æ—Å –∫ —Å–∞–π—Ç—É.
	 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, –Ω–µ —Å–ª—É—á–∏–ª–æ—Å—å –ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ö–æ–¥–∞ –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
	 * –ü–µ—Ä–µ–±–∏—Ä–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≤—ã—è—Å–Ω–µ–Ω–∏—è –∏—Ö —Å—Ç–∞—Ç—É—Å–∞. –ü–∏–Ω–≥—É–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, —É –∫–æ–≥–æ —Ö–æ–¥–æ–≤ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ –≤–æ–æ–±—â–µ –∏ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–∏ —à–µ—Å—Ç–∏ —á–∞—Å–æ–≤ –æ–Ω –Ω–µ –ø–∏–Ω–≥–æ–≤–∞–ª –¥–æ —ç—Ç–æ–≥–æ
	 * @param  {Boolean} status true - –≤–µ—Ä–Ω—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞. false - –≤–µ—Ä–Ω—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ª—É—á–∏–ª—Å—è –Ω–æ–≤—ã–π —Ö–æ–¥.
	 * @param  {Boolean} ping   true - —É–ø–æ–º—è–Ω–µ—Ç –Ω—É–∂–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. false - —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ –±—É–¥–µ—Ç.
	 * @return {Object}
	 */
	update : async function(status, ping){
		const response = await fetch('https://www.vdiplomacy.com/board.php?gameID=' + this.gameID);
		const body = await response.text();

		const currentTime = Math.floor(Date.now() / 1000);
		const turnDeadline = body.match(/<span class="timestampGames" unixtime="([0-9]+)">/)[1];
		const phaseLength = this.convertTimeToSeconds(body.match(/<span class="gameHoursPerPhase"><strong>([0-9\sa-z]+)<\/strong>/i)[1]);

		if(currentTime + phaseLength - this.interval < turnDeadline && this.interval < phaseLength)
			status = 'turn';

		if(!status) return { status : false, data : '–ù–µ—Ç –Ω–æ–≤–æ—Å—Ç–µ–π' };

		let supp = false;
		if((status !== 'turn' && this.lastPing !== undefined && this.lastPing + 2*3600 >= currentTime) || !ping){
			if(ping) supp = true;
			ping = false;
		}
		const users = body.match(this.globalRegExp);
		if(!users) return { status : false, data : '–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞!' };

		let text = '';
		let pingList = '';
		for(user of users){
			const data = user.match(this.localRegExp);
			let userStatus = data[1].match(/<img src=".+" alt="(.+)" title=".+" \/>/);
			userStatus = userStatus ? userStatus[1] : 'Skip';
			text += '\n' + reaction.emoji[this.statuses[userStatus]] + '  ' + (this.flags[data[2]] ? (this.flags[data[2]] + ' `') : '`‚†Ä‚†Ä ') + data[2].slice(0,2).toUpperCase() + '` <@' + (this.players[data[3]] ?? data[3]) + '> ' + data[7] + ' supply, ' + data[8] + ' units';
			if(userStatus === 'Not received') pingList += '<@' + (this.players[data[3]] ?? data[3]) + '> ';
		}

		const turn = body.match(/src="map\.php\?gameID=\d+&turn=(\d+|-1)&mapType=large"/)[1];
		const info = body.match(/<div class="titleBarLeftSide"><div>.+<span class="gameDate">(\w+),\s+(\d+)<\/span>, <span class="gamePhase">(.+)<\/span>/);

		let embed = new Discord.MessageEmbed()
			.setTimestamp()
			.setAuthor({ name : 'www.vdiplomacy.com', url : 'https://www.vdiplomacy.com/board.php?gameID=' + this.gameID })
			.setDescription('–ö–æ–Ω–µ—Ü —Ö–æ–¥–∞ <t:' + turnDeadline + ':R>\n' + text)
			.setFooter({ text : (this.seasons[info[1]] ?? info[1]) + ', ' + info[2] + ', ' + (this.phases[info[3]] ?? info[3]) })
			.setImage('https://www.vdiplomacy.com/map.php?gameID=' + this.gameID + '&turn=' + turn + '&mapType=large');

		if(status === 'turn')
			embed.setTitle('–ù–æ–≤—ã–π —Ö–æ–¥!');

		let data = { embeds : [embed] };
		if(ping && pingList.length){
			data.content = pingList;
			this.lastPing = currentTime;
		}

		return { status : true, data : data, suppressed: supp };
	},


	/**
	 * –í—Ä–µ–º—è —Å—Ç—Ä–æ–∫–æ–π –≤ unixtime
	 * @param  {String} str –í—Ä–µ–º—è —Å—Ç—Ä–æ–∫–æ–π
	 * @return {Number}     unixtime
	 */
	convertTimeToSeconds : str => {
		switch(str){
			case '5 minutes': return 300;
			case '7 minutes': return 420;
			case '10 minutes': return 600;
			case '15 minutes': return 900;
			case '20 minutes': return 1200;
			case '30 minutes': return 1800;
			case '1 hours': return 3600;
			case '2 hours': return 7200;
			case '4 hours': return 14400;
			case '6 hours': return 21600;
			case '8 hours': return 28800;
			case '10 hours': return 36000;
			case '12 hours': return 43200;
			case '14 hours': return 50400;
			case '16 hours': return 57600;
			case '18 hours': return 64800;
			case '20 hours': return 72000;
			case '22 hours': return 79200;
			case '1 day': return 86400;
			case '1 day, 1 hours': return 90000;
			case '1 day, 12 hours': return 115200;
			case '2 days': return 172800;
			case '2 days, 2 hours': return 180000;
			case '3 days': return 259200;
			case '4 days': return 345600;
			case '5 days': return 432000;
			case '6 days': return 518400;
			case '7 days': return 604800;
			case '10 days': return 864000;
		}
	}

};
